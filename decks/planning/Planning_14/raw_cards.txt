Partial Order Reduction - High level Motivation  	[latex]\begin{itemize}\item Worst case: heuristic search can explore exponentially more states thanneeded, even if heuristic almost perfect\item Idea: Complement heuristic search by orthogonal technique to reduce sizeof explored state space\item desired properties: preservation of completeness and optimality\end{itemize}[/latex]
Partial-Order Reduction : General Idea (one sentence)  	Enforce one particular ordering among operators and ignore all other orderings=> remove permutations of same operator applications
Definition - Operator extensions (partial order reduction)  	[latex]Let $\Pi = \langle V, I, O, \gamma \rangle$ be $SAS^+$ task, $o \in O$ operator.Then\begin{enumerate}\item $prevars(o) := vars(pre(o))$ are vars that occur in precondition of $o$\item $effvars(o) := vars(eff(o))$ are vars that occur in effect of $o$\item $o$ reads $v \in V$ iff $v \in prevars(o)$\item $o$ modifies $v \in V$ iff $v \in effvars(o)$\item $v \in V$ is goal-related iff $v \in vars(\gamma)$\end{enumerate}[/latex]
Definition - Domain Transition Graphs (Partial Order Reduction)  	[latex]Let $\Pi = \langle V, I, O, \gamma \rangle$ be $SAS^+$ task and $v \in V$. Domain transition graph for $v$ is directed graph $DTG(v) = \langle\mathcal{D}_v, E \rangle$ with $(d,d') \in E$ iff there exists operator $o \inO$ with\begin{enumerate}\item $eff(o)(v) = d'$\item $v \notin prevars(o) $ or $ pre(o)(v) = d$\end{enumerate}[/latex]
Definition - Operator dependencies (Partial-order reduction)  	[latex]Let $\Pi = \langle V, I, O, \gamma \rangle$ be task and $o, o' \in O$.\begin{enumerate}\item $o$ disables $o'$ iff exists $v \in effvars(o) \cap prevars(o')$ s.t. $eff(o)(v) \neq pre(o')(v)$\item $o$ enables $o'$ iff exists $v \in effvars(o) \cap prevars(o')$ s.t. $eff(o)(v) = pre(o')(v)$\item $o$ and $o'$ conflict iff there is $v \in effvars(o) \cap effvars(o')$s.t. $eff(o)(v) \neq eff(o')(v)$\item $o$ and $o'$ interfere iff $o$ disables $o'$ or $o'$ disables $o$ or $o$and $o'$ conflict\item $o$ and $o'$ are commutative iff $o$ and $o'$ do not interfere andneither $o$ enables $o'$ nor $o'$ enables $o$\end{enumerate}[/latex]
Definition - Active Operators (Partial-order reduction)  	[latex]Let $\Pi = \langle V, I, O, \gamma \rangle$ be task and $s$ state. Set of active operators $Act(s) \subseteq O$ in $s$ is set of operators s.t. $\forall o \in Act(s)$:\begin{enumerate}\item For every var $v \in prevars(o)$ exists path in $DTG(v)$ from $s(v)$ to$pre(o)(v)$. If $v$ goal-related then there exists also path from $pre(o)(v)$to goal value $\gamma(v)$\item For every goal related variable $v \in effvars(o)$ exists path in$DTG(v)$ from $eff(o)(v)$ to goal value $\gamma(v)$\end{enumerate}[/latex]
Proposition - Active Operators Properties  	[latex]\begin{enumerate}\item $Act(s)$ can be found efficiently for state $s$: consider paths inprojection of $\Pi$ onto $v$\item Operators not in $Act(s)$ can be ignored when reasoning about $s$\\$\Rightarrow$ not applicable in all states reachable from $s$ are lead todead-end from $s$\end{enumerate}[/latex]
Definition - Necessar Enabling Set (Partial-order Reduction)  	[latex]Let $\Pi = \langle V,I,O, \gamma \rangle$ be task, $s$ state, $o \in O$operator not applicable in $s$. Necessary enabling set $N$ is set of operatorsfor $o$ in $s$ if all operator sequences leading from $s$ to goal state andincluding $o$ contain an operator in $N$ before first occurence of $o$.\\ \\ \\Note: NES not uniquely determined for given $o$ and $s$ (supersets of NES stillNES)[/latex]
Definition - disjunctive action landmark (partial-order reduction)  	[latex]Let $\Pi = \langle V, I, O, \gamma \rangle$ be planning task and $s$ state. Disjunctive action landmark (DAL) $L$ in $s$ is set of operators s.t. alloperator sequences leading from $s$ to a goal state contain some operator in$L$.\\ \\Observation:\\For state $s$, operator $o$ inapplicable in $s$, disjunctive action landmarksfor task $\langle V,I,O, pre(o) \rangle$ are necessary enabling sets for $o$ in$s$[/latex]
Strong stubborn sets - Motivation (one sentence)  	Identify operators that have to be applied and cannot be postponed=> are not independent of other operators also not postponed
Definition - Strong stubborn set  	[latex]Let $\Pi = \langle V,I,O, \gamma \rangle$ be task, $s$ state. Set $T_s \subseteq O$ is strong stubborn set in $s$ if\begin{enumerate}\item $T_s$ contains disjunctive action landmark in $s$\item for all $o \in T_s$ applicable in $s$, $T_s$ contains all operators thatare active in $s$ and interfere with $o$\item for all $o \in T_s$ not applicable in $s$, $T_s$ contains necessaryenabling set for $o$ and $s$\end{enumerate}[/latex]
Strong stubborn set - Property remarks (partial-order reduction)  	-> Even when excluding inactive operators, we preserve completeness and evenoptimality of search algorithms-> excluding inactive operators can cascade => additional active operators neednot be considered
Definition - Weak Stubborn Sets (Partial-Order Reduction)  	[latex]Let $\Pi = \langle V,I,O,\gamma \rangle $ task, $s$ state. Set $T_s \subseteq O$ is weak stubborn set in $s$ if\begin{enumerate}\item $T_s$ contains disjunctive action landmark in $s$\item for all $o \in T_s$ applicable in $s$, $T_s$ contains the activeoperators in $s$ with conflicting effects with $o$ or that are disabled by $o$\item for all $o \in T_s$ not applicable in $s$, $T_s$ contains necessaryenabling set for $o$ and $s$\end{enumerate}[/latex]
Weak Stubborn Set - Properties  	[latex]\begin{itemize}\item some operators that disable operator in $T_s$ need not be included in$T_s$\\$\Rightarrow$ potentially allow more pruning than strong stubborn sets\item suffices to include active operators disabled or conflicting withapplicable operators $o \in T_s$\\\\$\Rightarrow$ however, $o'$ does not need to be included if $o'$ disablesapplicable operator $o \in T_s$\\\\$\Rightarrow$ no computational overhead of computing weak stubborn sets vsstrong stubborn sets\end{itemize}[/latex]
Theorem - Stubborn sets + completeness optimality  	[latex]Theorem: \\Weak stubborn sets are completeness and optimality preserving\\ \\Theorem:\\Strong stubborn sets are completeness and optimality preserving\\ \\[/latex]
