TCTL Model Checking: High level steps  	[latex]Input: timed automaton $ \mathcal{T}, TCTL $ formula $\psi$Output: $ \mathcal{T} \models \psi$?\begin{enumerate}    \item eliminate timing parameters from $\psi$, giving $\hat{\psi}$    \item make finite abstraction of state space    \item construct abstract transition system $RTS$ with $ \mathcal{T} \models\psi $ iff $RTS \models \bar{\psi}$.    \item apply ctl model checking to see whether $RTS \models \hat{\psi}$\end{enumerate}[/latex]
TCTL Model Checking: Eliminating timing parameters  	[latex]Let $\mathcal{T}$ be a timed automaton with clock set $\mathcal{C}$, atomicpropositions $AP$. Let $\mathcal{T}' = \mathcal{T} \oplus z$ result from$\mathcal{T}$ by adding fresh clock $z$ (never gets reset).\\ \\For any state $\sigma$ of $\mathcal{T}$:\begin{enumerate}    \item $\sigma \models_{TCTL} E(\psi_1 \mathcal{U}^J \psi_2)$ iff \\reset(z) in $\sigma \models_{TCTL} E(\psi_1 \vee \psi_2 \mathcal{U} ((z \in J)\wedge \psi_2)$    \item $\sigma \models_{TCTL} A(\psi_1 \mathcal{U}^J \psi_2)$ iff \\reset(z) in $\sigma \models_{TCTL} A(\psi_1 \vee \psi_2 \mathcal{U} ((z \in J)\wedge \psi_2)$    \item $\sigma \models_{TCTL} E \mathcal{F}^{\leq 2} \psi_1$ iff \\reset(z) in $\sigma \models_{TCTL}E \mathcal{F}((z \leq 2) \wedge \psi_1)     \item $\sigma \models_{TCTL} E \mathcal{G}^{\leq 2} \psi_1$ iff \\reset(z) in $\sigma \models_{TCTL}E \mathcal{G}((z \leq 2) \to \psi_1) \end{enumerate}[/latex]
Bisimulation: Definition 	[latex]Let $LSTS = (\Sigma, Lab, Edge, Init)$ be a state transition system, $AP$ aset of atomic propositions and $L: \Sigma \to 2^{AP}$ a labeling function over$AP$. A bisimulation for $LSTS$ is an equivalence relation $\approx \subseteq\Sigma \times \Sigma$ s.t. for all $\sigma_1 \approx \sigma_2$\begin{enumerate}    \item $L(\sigma_1) = L(\sigma_2)$    \item for all $\sigma_{1}' \in \Sigma$ with $\sigma_1 \stackrel{a}{\to}\sigma_{1}'$ there exists $\sigma_{2}' \in \Sigma$ s.t. $\sigma_2 \stackrel{a}{\to}\sigma_{2}'$ and $\sigma_1 \approx \sigma_{1}'$\end{enumerate}Note: hidden symmetry condition(without, $\approx$ is only simulation)[/latex]
Time-abstract bisimulation  	[latex]\newcommand{\aut}{\mathcal{T}}Let $\aut = (Loc, C, Lab, Edge, Inv, Int)$ be a timed automaton, $AP$ atomicpropositions, $L : \Sigma \to 2^{AP}$ labeling function over $AP$. Atime-abstract bisimulation on $\aut$ is an equivalence relation $\approx\subseteq \Sigma \times \Sigma$ s.t. for all $\sigma_1 \approx \sigma_2$\begin{enumerate}    \item $L(\sigma_1) = L(\sigma_2)$    \item for all $\sigma_{1}' \in \Sigma$ with $\sigma_1 \stackrel{a}{\to}\sigma_{1}'$ exists $\sigma_{2}' \in \Sigma$ s.t. $\sigma_2 \stackrel{a}{\to}\sigma_{2}'$ and $\sigma_{1}' \approx \sigma_{2}'$    \item for all $\sigma_{1}' \in \Sigma$ with $\sigma_1 \stackrel{t_1}{\to}\sigma_{1}'$ exists $\sigma_{2}' \in \Sigma$ s.t. $\sigma_2 \stackrel{t_2}{\to}\sigma_{2}'$ and $\sigma_{1}' \approx \sigma_{2}'$\end{enumerate}[/latex]
Relating bisimulated paths  	[latex]Assume timed automaton $\mathcal{T}$ with state space $\Sigma$ and bisimulation$\approx \subseteq \Sigma \times \Sigma$ on $\mathcal{T}$. Then for all  $\sigma, \sigma' \in \Sigma$ with $\sigma \approx \sigma'$, foreach path:\begin{equation*}\pi: \sigma \stackrel{\alpha_1}{\to}\sigma_1 \stackrel{\alpha_2}{\to}\sigma_2\dots\end{equation*}of $\mathcal{T}$ exists path:\begin{equation*}\pi': \sigma' \stackrel{\alpha_{1}'}{\to}\sigma_{1}'\stackrel{\alpha_{2}'}{\to}\sigma_{2}' \dots\end{equation*}s.t. for all $i$:\begin{enumerate}    \item $\sigma_i \approx \sigma_{i}'$    \item $\alpha_i = \alpha_{i}'$ if $\alpha_i \in Lab$     \item $\alpha_i, \alpha_{i}' \in \mathbb{R}_{\geq 0}$ else\end{enumerate}[/latex]
