Feature Maps 	-> compact representation-> natural choice for Kalman filter based systems-> multiple feature observations improve landmark position estimate (EKF)
Grid Maps  	-> Discretize world into cells-> grid structure is rigid-> each cell assumed completely free or occupied-> non-parametric model-> large maps = large memory costs-> no feature detector necessary
Three basic assumptions: Grid Maps  	[latex]\begin{enumerate}\item Area of grid cell either completely free or occupied\\$\Rightarrow$ each cell = binary random variable, models occupancy:\\cell $i$ occupied $= p(m_i) = 1$, free $= p(m_i) = 0$, no knowledge $=p(m_i) =0.5$\item world is static\item cell random variables independent of each other\\$\Rightarrow p(m) = \prod \limits_{i} p(m_i)$\end{enumerate}TODO:INSERT IMAGE SLIDE 9 under 2 and SLIDE 11 under 3[/latex]
Estimating map from data  	[latex]Given sensor data $z_{1:t}$ and poses $x_{1:t}$ of the sensor, estimate map as:\begin{equation*}p(m | z_{1:t}, x_{1:t}) = \prod \limits_{i} p(m_i | z_{1:t}, x_{1:t})\end{equation*}using binary bayes filter for static state[/latex]
 [latex]Derive following term from static state binary bayes filter:\begin{equation*}p(m_i | z_{1:t}, x_{1:t})\end{equation*}[/latex] 	[latex]\begin{align*}p(m_i | z_{1:t}, x_{1:t}) &\stackrel{Bayes rule}{=} \frac{p(z_t|m_i, z_{1:t-1},x_{1:t}) p(m_i | z_{1:t-1}, x_{1:t})}{p(z_t|z_{1:t-1}, x_{1:t} }\\&\stackrel{Markov}{=} \frac{p(z_t|m_i, x_t) p(m_i| z_{1:t-1}, x_{1:t-1}) }{p(z_t | z_{1:t-1}, x_{1:t} }\\&\stackrel{Bayes rule}{=} \frac{ }{ }\end{align*}TODO: FINISH DERIVATION AFTER SECOND BAYES RULE[/latex]
[latex]Static State Binary Bayes Filter, state (no derivation necessary):\begin{equation*}p(\neg m_i | z_{1:t}, x_{1:t})\end{equation*}[/latex] 	[latex]\begin{equation*}p(\neg m_i | z_{1:t}, x_{1:t}) = \end{equation*}TODO: FILL WITH LENGTHY EQUATION[/latex]
TODO: FINISH DERIVATION STUFF SLIDES 20 -22  	DO IT
 [latex]How to get $p(x)$ from the ratio $\frac{p(x)}{1-p(x)}$[/latex] 	[latex]\begin{align*}\frac{p(x)}{1-p(x)} &= Y\\p(x) &= Y - Yp(x)\\p(x) +Yp(x) &= Y\\p(x) (1+Y) &=Y\\p(x) &= \frac{Y}{1+Y}\\p(x) &= \frac{1}{1+\frac{1}{Y}}\end{align*}[/latex]
Why do we use the log-odds notation to perform the calculations in grid mapping?  	Reasons of efficiency: Log allows calculation with sums instead ofmultiplications
[latex]How is the log odds ratio $l(x)$ defined, and how can we retrieve $p(x)$ from it? [/latex] 	[latex]\begin{equation*}l(x) = log(\frac{p(x)}{1-p(x)}\end{equation*}To retrieve $p(x)$:\begin{equation*}p(x) = 1- \frac{1}{1+exp(l(x))}\end{equation*}[/latex]
Occupancy Mapping in Log Odds Form  	[latex]Product turns into sums:\\\begin{equation*}l(m_i|z_{1:t}, x_{1:t}) = \underbrace{l(m_i|z_t, x_t) }{\text{inverse sensor model}} + \underbrace{l(m_i|z_{1:t-1}, x_{1:t-1}}{\text{recursive term}} -\underbrace{l(m_i) }{\text{prior}}\end{equation*}[/latex]
Occupancy Value Depending on the measured Distance (3 plots)  	TODO: ADD PLOTS FROM SLIDES 31, 32, 33
Inverse Sensor Model for Laser Range Finders  	TODO: ADD IMAGE FROM SLIDE 37 + add details where they are missing (r, k-thbeam)
TODO: CONTINUE FROM SLIDE 40 ONWARDS  	DO IT
