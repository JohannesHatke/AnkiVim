Definition: Meta-heuristics  	[latex]High-level problem-independent algorithmic framework that provides set of\\guidelines or strategies to develop heuristic optimization algorithms\\ \\Meta $=$ beyond in sense of high level\\Heuristic $=$ to search[/latex]
Meta-heuristics: Application domain  	[latex]meta-heuristics = methods for \emph{i know it when i see it} problems\begin{itemize}\item don't know beforehand what optimal solution looks like\item don't know how to find optimal solutions\item brute-force search impossible due to large search space\end{itemize}But:\begin{itemize}\item given candidate solution we can assess how good it is\end{itemize}[/latex]
Hyper-heuristics: Definition  	[latex]hyper-heuristic $=$ search method or learning mechanism for selecting or\\generating heuristics to solve computationally hard problems\\Idea:\begin{itemize}\item deliver good enough, soon enough, cheap enough solutions\item domain barrier: performsn in problem-independent manner\item hyper $=$ take meta-heuristics to higher level\end{itemize}[/latex]
Search spaces: heuristics vs meta-heuristics  	TODO: INSERT IMAGE FROM SLIDE 10
Hyper-heuristics: Why do selection hyper-heuristics work?  	[latex]A fitness landscape is composed of\begin{itemize}\item solution representation\item fitness function\item neighbourhood (low-level heuristic)\end{itemize}INSERT IMAGE WITH TEXT DIRECTLY ABOVE FROM SLIDE 16TODO[/latex]
Heuristic Selection: Basic Methods  	[latex]\begin{enumerate}\item Simple Random (SR): uniform random selection\item Greedy (GR): choose the heuristic yielding the highest improvement\item Random Permutation (PR): first generate permutation of heuristics, thenapply heuristics in this order\item Random Permutation Descent (RPD): same as RP, except improving heuristicis applied again at next decision step\end{enumerate}[/latex]
Heuristic Selection: Choice Function  	[latex]Choice function maintains record of performance of each heuristic.\\Three criteria:\begin{enumerate}\item $f_1$ : individual performance\item $f_2$ : how well it has performed with other heuristics\item $f_3$ : elapsed time since heuristic was called\end{enumerate}Actual choice function:\begin{equation*}f(h_i) = \alpha f_1(h_i) + \beta f_2(h_j, h_i) + \delta f_3(h_i)\end{equation*}[/latex]
Heuristic Selection - Move Acceptance: Basic Methods  	[latex]\begin{itemize}\item All Moves (AM) : accept all solutions\item Only Improving (OI): accept only better solutions\item Improving or Equal(IE): accept better or equal quality solutions\item Simulated Annealing (SA): IE with accepting worsening solutions\end{itemize}[/latex]
Selection Hyper-heuristics: Challenges  	[latex]\begin{enumerate}\item Performance is limited by low-level heuristics\item Generality issues\begin{itemize}\item dealing with different heuristic sets/set size/heuristic types\item dealing with differences in heuristic speed\item dealing with different runtime limits (short vs long runtime cutoff)\end{itemize}\end{enumerate}[/latex]
Heuristic Selection - Advanced topics  	[latex]\begin{enumerate}\item Distributed hyper-heuristics (multiple CPU or PCs)\begin{itemize}\item synchronous vs asynchronous\end{itemize}\item Hyper-...-hyper heuristics\begin{itemize}\item multi-level search (selecting, configuring, generating hyper-heuristics)\item at this stage, can use algorithm selection and configuration\end{itemize}\end{enumerate}[/latex]
